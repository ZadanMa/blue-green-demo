# Deployment BLUE
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-blue
  namespace: blue-green-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
      version: blue
  template:
    metadata:
      labels:
        app: myapp
        version: blue
    spec:
      containers:
        - name: app
          image: myapp:blue
          ports:
            - containerPort: 8080
          env:
            - name: app.version
              value: "blue"
          resources:
            requests:
              memory: "900Mi"
              cpu: "600m"
            limits:
              memory: "1200Mi"
              cpu: "800m"
---
# Deployment GREEN
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-green
  namespace: blue-green-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
      version: green
  template:
    metadata:
      labels:
        app: myapp
        version: green
    spec:
      containers:
        - name: app
          image: myapp:green
          ports:
            - containerPort: 8080
          env:
            - name: app.version
              value: "green"
          resources:
            requests:
              memory: "900Mi"
              cpu: "600m"
            limits:
              memory: "1200Mi"
              cpu: "800m"
---
# Servicio
apiVersion: v1
kind: Service
metadata:
  name: myapp-service
  namespace: blue-green-demo
spec:
  selector:
    version: blue  # Versi√≥n inicial
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: NodePort  # Para acceso local
---
# Ingress para Docker Desktop
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp-ingress
  namespace: blue-green-demo
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp-service
                port:
                  number: 8080
---
# HPA para BLUE
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: myapp-blue-hpa
  namespace: blue-green-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: myapp-blue
  minReplicas: 2
  maxReplicas: 7
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
      selectPolicy: Max
---
# HPA para GREEN
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: myapp-green-hpa
  namespace: blue-green-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: myapp-green
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
      selectPolicy: Max